# DEVELOPER FUNDAMENTALS 1

# name = input ('what is your name? ')
# print (name+' is the king')
# print(type(-1))
# 2**2 mean 2 raised to power 2
# type() would return the class and dtata type like type 2 retuns class int
# print (2*3) #* 
# print (2**3) #**  
# print (8/4) # / would return a floating result 
# print (8//4) # //returns the answer rounded down to an integer
# print (6%4) # % modulo returns remainder of devision 6%4=2  
# print(round (4.1)) # rounds to closest integer
# print(abs(-20)) #abs return absolute value 
# PRECEDENCE (), **, * / , + -
# print(bin(2)) # returns binary for integers. 
# print (int(0b10)) # returns from bases  to integer. f. integer(base,number)
# a,b,c = 1,2,3 # a quick way to asign values is by using commas. 1,2,3=a,b,c

#SYNTAX
.Title(): recognizes everything as a title, ada,Ada,ADA aDa would all return as Ada, is string is more than one word. It only capitalizes the first word

name='chisom'
last='ohazurike'
morn_text='Hello {} {}. welcome'
print((morn_text).format(name.title(),last.title()))

.lower(): always convert inputs to lower before working with it. Users might capitalize here and there
.strip(): takes away spaces in strings (rstrip and lstrip helps takes out the space from the left and right side, if youre sure where it is)

\t : tab space
\n: next new line



#constants  #use this section to state fixed constants that no one should change



# sorted(x): sorts list without modyfyinf the original list 
#----------------------
#   METHODS
#----------------------
# .insert(x,y): helps inserts element y in position x
# .extend([x.y]): adds elements x, and y into what ever list calling the extends
# .pop() : pops out the last element, if an index is called, it removes the index instead
# .remove :takes out what ever value is asked to be removed. remove(4) would remove element 4 if available
# .clear(): removes everything in the list
# .count(x): counts the number of time apple appear in a list
# .index(x) : tells what position x is at on a list 
# .sort() :arranges list in order from small to bigg 
# 

